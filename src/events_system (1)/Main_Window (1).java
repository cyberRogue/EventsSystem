/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package events_system;

import java.awt.Image;
import java.io.*;
import java.sql.*;
import java.text.*;
import java.util.*;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.filechooser.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ben
 */
public class Main_Window extends javax.swing.JFrame {

    /**
     * Creates new form Main_Window
     */
    public Main_Window() {
        initComponents();
      //  displayProductData();
   //     JComboCategoryFill();
    }
    String ImgPath=null;
    int pos=0;
    String catItem=null;
    
    public Connection dbConnect(){
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory?useSSL=false", "root", "root");
            } catch (SQLException ex) {
                Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
            }
            return con;
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
            return con;
        }
    }
    
    //Resize Image
    /*
    public ImageIcon ResizeImage(String imagePath, byte[] pic){
    ImageIcon myImage = null;
    
    if(imagePath !=null){
    myImage = new ImageIcon(imagePath);
    }else{
    myImage = new ImageIcon(pic);
    }
    
    Image img = myImage.getImage();
    Image img2 = img.getScaledInstance(jlblImage.getWidth(),jlblImage.getHeight(), Image.SCALE_SMOOTH);
    ImageIcon image = new ImageIcon(img2);
    return image;
    }
    
    //Retrieve products data
    public ArrayList<Products> getProductList(){
    
    ArrayList<Products> productList = new ArrayList<>();
    Connection con = dbConnect();
    
    String query = "SELECT * FROM items_in_stock";
    Statement stmt;
    ResultSet rs;
    try {
    
    stmt = con.createStatement();
    rs = stmt.executeQuery(query);
    Products product;
    
    while(rs.next()){
    product = new Products(rs.getInt("item_id"),rs.getString("item_name"),rs.getInt("item_number"),rs.getDouble("item_cost"),rs.getString("date"),rs.getBytes("image"));
    productList.add(product);
    }
    
    } catch (SQLException ex) {
    Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
    }
    return productList;
    }
    
    //Display the retrieved data in a JTable
    public void displayProductData(){
    ArrayList<Products> list = getProductList();
    DefaultTableModel model = (DefaultTableModel)JTable_Products.getModel();
    
    //Clear the JTable
    model.setRowCount(0);
    Object[] row = new Object[5];
    
    for(int i=0;i<list.size();i++){
    //row[0]=list.get(i).getId();
    row[0]=list.get(i).getName();
    row[1]=list.get(i).getPrice();
    row[3]=list.get(i).getAddDate();
    row[2]=list.get(i).getNumber();
    model.addRow(row);
    }
    }
    public void showItem(int index){
    jtxtName.setText(getProductList().get(index).getName());
    jtxtCost.setText(Double.toString(getProductList().get(index).getPrice()));
    jtxtId.setText(Integer.toString(getProductList().get(index).getId()));
    jtxtNumber.setText(Integer.toString(getProductList().get(index).getNumber()));
    // jComboBox.setSelectedItem(getProductList().get(index).getCategory());
    
    
    Date addDate = null;
    try {
    addDate = new SimpleDateFormat("dd-MM-yyyy").parse(getProductList().get(index).getAddDate());
    jtxtDate.setDate(addDate);
    } catch (ParseException ex) {
    Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
    }
    jlblImage.setIcon(ResizeImage(null,getProductList().get(index).getImage()));
    
    }
    
    //Check Input Fields
    
    public boolean checkInput(){
    if(
    jtxtCost.getText() == null ||
    jtxtNumber.getText() == null ||
    jtxtDate.getDate() == null
    ){
    return false;
    }else{
    try{
    Double.parseDouble(jtxtCost.getText());
    return true;
    }catch(Exception ex){
    return false;
    }
    }
    }*/
    /*
    private void JComboCategoryFill(){
        jComboBox.addItem("Fruits & Groceries");
        jComboBox.addItem("Diary Products");
        jComboBox.addItem("Beverages");
        jComboBox.addItem("Vegetables");
    } */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1207, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 603, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main_Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
